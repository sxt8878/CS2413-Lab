#include <stdio.h>

void dfs(char** grid, int m, int n, int r, int c) {
    if (r < 0 || r >= m || c < 0 || c >= n || grid[r][c] == '0') {
        return;
    }
    grid[r][c] = '0'; // mark as visited
    dfs(grid, m, n, r + 1, c);
    dfs(grid, m, n, r - 1, c);
    dfs(grid, m, n, r, c + 1);
    dfs(grid, m, n, r, c - 1);
}

int numIslands(char** grid, int gridSize, int* gridColSize) {
    int m = gridSize;
    int n = gridColSize[0];
    int islands = 0;

    for (int i = 0; i < m; ++i) {
        for (int j = 0; j < n; ++j) {  // Fixed: j++
            if (grid[i][j] == '1') {
                islands++;             // Fixed: increment counter
                dfs(grid, m, n, i, j);
            }
        }
    }
    return islands;
}

